name: Rebuild codegen

# on:
#   schedule:
#     - cron: '0 */4 * * *'

on: workflow_dispatch

jobs:
  check:
    outputs:
      latest_commit: ${{ steps.fetch.outputs.LATEST_COMMIT }}
      previous_commit: ${{ steps.fetch.outputs.PREVIOUS_COMMIT }}
    runs-on: ubuntu-latest
    name: Check for new commits
    steps:
      - name: Check for new commits
        id: fetch
        run: |
          # Get latest geode-sdk/bindings commit and store it to a ENV variable
          git clone https://github.com/geode-sdk/bindings.git
          cd bindings
          export LATEST_COMMIT=$(git rev-parse HEAD)
          cd ..

          # Get latest release tag
          export LATEST_RELEASE=$(curl -s https://api.github.com/repos/prevter/bindings-meta/releases/latest | jq -r '.tag_name')

          # Compare the latest commit with the latest release tag
          export LATEST_COMMIT=$(echo $LATEST_COMMIT | cut -c1-7)
          export LATEST_RELEASE=$(echo $LATEST_RELEASE | cut -c1-7)
          if [ "$LATEST_COMMIT" == "$LATEST_RELEASE" ]; then
            echo "No new commits since last release"
            exit 1
          fi

          # Export the latest commit to be used in the next step
          echo "LATEST_COMMIT=$LATEST_COMMIT" >> $GITHUB_OUTPUT
          echo "PREVIOUS_COMMIT=$LATEST_RELEASE" >> $GITHUB_OUTPUT

  generate:
    strategy:
      matrix:
        config:
          - { platform: Win32, version: "2.204" }
          - { platform: MacOS, version: "2.200" }
          
    needs: check
    runs-on: ubuntu-latest
    name: Run codegen
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure CMake
        run: cmake -B build -S . -DGEODE_TARGET_PLATFORM=${{ matrix.config.platform }} -DGEODE_GD_VERSION=${{ matrix.config.version }}
      
      - name: Save output
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.config.platform }}-${{ matrix.config.version }}
          path: ./output

  publish:
    needs: [generate, check]
    runs-on: ubuntu-latest
    name: Publish results
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with: 
          path: codegen
          merge-multiple: true
  
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create LATEST_COMMIT -t "Bindings commit $LATEST_COMMIT" -n "Codegen output for https://github.com/geode-sdk/bindings/compare/$PREVIOUS_COMMIT...$LATEST_COMMIT" codegen/*